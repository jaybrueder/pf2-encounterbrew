name: Create Release and Publish Docker Image

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      BUILDX_NO_DEFAULT_ATTESTATIONS: 1
      ACTIONS_STEP_DEBUG: true
    steps:
      # --- Checkout & Setup ---
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      # --- Logins ---
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- Debug: Verify login ---
      - name: Debug - Verify Docker login
        run: |
          echo "Verifying Docker login..."
          docker info
          echo "Docker Hub username (masked): ${{ secrets.DOCKERHUB_USERNAME }}"
          echo "Testing docker pull to verify connectivity..."
          docker pull hello-world
          echo "Login verification complete."

      # --- Metadata ---
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/pf2-encounterbrew
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable=${{ !contains(github.ref, '-') && startsWith(github.ref, 'refs/tags/v') }}

      # --- Debug: Pre-build checks ---
      - name: Debug - Pre-build checks
        run: |
          echo "=== Pre-build Debug Info ==="
          echo "Current directory: $(pwd)"
          echo "Dockerfile exists: $(test -f Dockerfile && echo 'YES' || echo 'NO')"
          echo "Dockerfile contents (first 10 lines):"
          head -10 Dockerfile || echo "Failed to read Dockerfile"
          echo ""
          echo "Docker buildx version:"
          docker buildx version
          echo ""
          echo "Available builders:"
          docker buildx ls
          echo ""
          echo "Metadata tags:"
          echo "${{ steps.meta.outputs.tags }}"
          echo ""
          echo "=== End Pre-build Debug Info ==="

      # --- Build and Push ---
      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          # Add build args for debugging
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      # --- Debug: Post-build checks ---
      - name: Debug - Post-build status
        if: always()
        run: |
          echo "=== Post-build Debug Info ==="
          echo "Build-push step outcome: ${{ steps.build-push.outcome }}"
          echo "Build-push step conclusion: ${{ steps.build-push.conclusion }}"
          if [ -f "${{ steps.build-push.outputs.imageid }}" ]; then
            echo "Image ID: $(cat ${{ steps.build-push.outputs.imageid }})"
          else
            echo "No image ID file found"
          fi
          echo "Build digest: ${{ steps.build-push.outputs.digest }}"
          echo "Build metadata: ${{ steps.build-push.outputs.metadata }}"
          echo "=== End Post-build Debug Info ==="


      # --- Changelog Generation ---
      - name: Generate Changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: --tag ${{ github.ref_name }} --strip header
        env:
          OUTPUT: body.md

      - name: Commit updated CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(changelog): update CHANGELOG.md for ${{ github.ref_name }}"
          file_pattern: 'CHANGELOG.md'
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      # --- Create GitHub Release ---
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
