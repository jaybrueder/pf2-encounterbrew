services:
  # Production services
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=admin
      - DB_PASSWORD=admin
      - DB_DATABASE=encounterbrew
      - DB_SCHEMA=public
      - REDIS_ADDR=redis:6379
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    profiles:
      - prod

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: encounterbrew
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles:
      - prod

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    profiles:
      - prod

  # Development services (with port mapping)
  postgres-dev:
    image: postgres:13
    environment:
      POSTGRES_DB: encounterbrew
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles:
      - dev

  redis-dev:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    profiles:
      - dev

  # Tools
  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://admin:admin@postgres:5432/encounterbrew?sslmode=disable", "up"]
    profiles:
      - tools

  seeder:
    build:
      context: .
      dockerfile: Dockerfile.seeder
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=admin
      - DB_PASSWORD=admin
      - DB_DATABASE=encounterbrew
      - DB_SCHEMA=public
    restart: "no"
    profiles:
      - seeder

volumes:
  postgres_data:
  redis_data:
