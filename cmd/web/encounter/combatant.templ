package encounter

import (
	"fmt"
    "strconv"

    "pf2.encounterbrew.com/internal/models"

    _ "github.com/a-h/templ"
)

templ CombatantList(encounter models.Encounter) {
    <div id="combatants-list">
        if len(encounter.Combatants) == 0 {
            <p>No combatants.</p>
        } else {
            for i, combatant := range encounter.Combatants {
                @CombatantListItem(combatant, i, encounter)
            }
        }
    </div>
}

templ CombatantListItem(combatant models.Combatant, index int, encounter models.Encounter) {
	<div
        x-data="{
            isInitiativeOpen: false,
            damageIsOpen: false,
            showStatblock: false,
            showRadialMenu: false,
            showConditions: false,
            monstersIsOpen: false,
            confirmDelete() {
                if (confirm('Are you sure you want to remove this combatant from the encounter?')) {
                    this.$refs.deleteButton.click();
                }
            }
        }"
        class={ "flex-col justify-left w-full overflow-hidden rounded-md mb-2 bg-white border-solid border-2", setDefeated(combatant), isActive(index, encounter.Turn) }
    >
        <div class="flex justify-between">
            <div class="flex">
                <button @click="showStatblock = !showStatblock" class={ "flex items-center justify-center w-12", getColorClass(combatant) }>
                    <span class="text-white font-bold">{strconv.Itoa(combatant.GetInitiative())}</span>
                </button>

                <div class="px-4 py-2 -mx-3">
                    <div class="mx-3">
                        <button @click="showStatblock = !showStatblock" class="font-semibold text-sm text-gray-700 text-left uppercase">{combatant.GetName()}</button>
                        <p class="text-xs text-gray-400">
                            <span><i class="fa-regular fa-heart"></i> <b>{strconv.Itoa(combatant.GetHp())}</b></span>
                            <span class="ml-2"><i class="fa-solid fa-shield-halved"></i>
                                if combatant.IsOffGuard() {
                                    <span class="text-red-600 font-semibold">{strconv.Itoa(combatant.GetAc())}</span>
                                } else {
                                    <span>{strconv.Itoa(combatant.GetAc())}</span>
                                }
                            </span>
                            <span class="ml-6"><i class="fa-solid fa-hand-fist"></i> {plusMinus(combatant.GetFort())}</span>
                            <span class="ml-2"><i class="fa-solid fa-person-running"></i> {plusMinus(combatant.GetRef())}</span>
                            <span class="ml-2"><i class="fa-solid fa-brain"></i> {plusMinus(combatant.GetWill())}</span>
                        </p>
                        <div class="flex justify-left">
                            for _, condition := range combatant.GetConditions() {
                                @ConditionButton(&condition, encounter, index)
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="relative flex items-center pr-4">
                <button
                    @click="showRadialMenu = !showRadialMenu"
                    class="p-2 text-gray-300 hover:text-gray-500 focus:outline-none"
                >
                    <i class="fas fa-ellipsis-v text-xl"></i>
                </button>

                <div
                    x-show="showRadialMenu"
                    @click.outside="showRadialMenu = false; showConditions = false"
                    x-transition:enter="transition ease-out duration-200"
                    x-transition:enter-start="opacity-0 scale-95"
                    x-transition:enter-end="opacity-100 scale-100"
                    x-transition:leave="transition ease-in duration-150"
                    x-transition:leave-start="opacity-100 scale-100"
                    x-transition:leave-end="opacity-0 scale-95"
                    class="absolute right-12 top-2 flex gap-3"
                >

	                <button
                  		@click.stop="confirmDelete(); showRadialMenu = false"
	                    class="flex items-center justify-center w-10 h-10 bg-red-700 hover:bg-red-500 text-white rounded-full shadow-lg transform transition-all duration-200 hover:scale-110"
	                    title="Remove combatant"
	                >
                  		<i class="fas fa-xmark"></i>
	                </button>

	                <button
	                    x-ref="deleteButton"
	                    hx-delete={fmt.Sprintf("/encounters/%d/remove_combatant/%d/%t", encounter.ID, combatant.GetAssociationID(), combatant.IsMonster())}
	                    hx-target="#combatants"
	                    class="hidden"
	                ></button>

                    <button
                        @click="isInitiativeOpen = true; showRadialMenu = false"
                        class="flex items-center justify-center w-10 h-10 bg-green-700 hover:bg-green-500 text-white rounded-full shadow-lg transform transition-all duration-200 hover:scale-110"
                        title="Edit Initiative"
                    >
                        <i class="fas fa-clock"></i>
                    </button>

                    // Conditions Grid
                    <div class="relative">
                        <button
                            @click="showConditions = !showConditions"
                            class="flex items-center justify-center w-10 h-10 bg-blue-700 hover:bg-blue-500 text-white rounded-full shadow-lg transform transition-all duration-200 hover:scale-110"
                            title="Add Condition"
                        >
                            <i class="fas fa-plus-circle"></i>
                        </button>

                        <div
                            x-cloak
                            x-show="showConditions"
                            x-transition:enter="transition ease-out duration-200"
                            x-transition:enter-start="opacity-0 scale-95"
                            x-transition:enter-end="opacity-100 scale-100"
                            x-transition:leave="transition ease-in duration-150"
                            x-transition:leave-start="opacity-100 scale-100"
                            x-transition:leave-end="opacity-0 scale-95"
                            class="fixed inset-0 z-50 flex items-center justify-center bg-black/50"
                        >
                        	<div @click.outside="showConditions = false"
                         		class="p-4 m-2 text-sm bg-white font-normal text-left border-solid border-4 border-blue-700 rounded-lg shadow-lg max-w-3xl max-h-[80vh] overflow-y-auto">
                                @ConditionGroupList("other", combatant, index, encounter)
                                @ConditionGroupList("abilities", combatant, index, encounter)
                                @ConditionGroupList("senses", combatant, index, encounter)
                                @ConditionGroupList("death", combatant, index, encounter)
                                @ConditionGroupList("detection", combatant, index, encounter)

                                <div class="mt-4 flex items-center">
                                    <button type="button" @click="showConditions = false" class="w-full px-4 py-2 text-sm font-medium tracking-wide text-gray-700 capitalize transition-colors duration-300 transform border border-gray-200 rounded-md hover:bg-gray-100 focus:outline-none focus:ring focus:ring-gray-300 focus:ring-opacity-40">
                                        Cancel
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <button
                        @click="damageIsOpen = true; showRadialMenu = false"
                        class="flex items-center justify-center w-10 h-10 bg-red-700 hover:bg-red-500 text-white rounded-full shadow-lg transform transition-all duration-200 hover:scale-110"
                        title="Deal Damage"
                    >
                        <i class="fas fa-heart-broken"></i>
                    </button>
                </div>
            </div>

        </div>

        @EditInitiativeModal(combatant, index, encounter.ID)
        @DealDamageModal(combatant, index, encounter.ID)

        if combatant.GetType() == "monster" {
            @Statblock(combatant)
        }
    </div>
}
