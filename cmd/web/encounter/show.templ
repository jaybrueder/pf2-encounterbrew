package encounter

import (
    "strconv"

    "pf2.encounterbrew.com/cmd/web"
    "pf2.encounterbrew.com/internal/models"

    _ "github.com/a-h/templ"
)

templ EncounterShow(encounter models.Encounter) {
    @web.Base(encounter.Name) {
    	<div x-data="{ isMonstersOpen: false, isAllInitiativeOpen: false }">
	        <section class="max-w-4xl px-2 mx-auto pb-16">
	            <div id="difficulty">
	                @Difficulty(encounter)
	            </div>
	            <div id="bulk-initiative" >
	                @SetInitiative(encounter)
	                @AllInitiativeModal(encounter)
	            </div>
	            <div id="monsters">
	            	@MonstersModal()
	            </div>
	            <div id="combatants">
	                @CombatantList(encounter)
	            </div>
	        </section>
	        <section class="p-2 mx-auto bg-black flex justify-between fixed w-full bottom-0">
	            <button hx-post={"/encounters/" + strconv.Itoa(encounter.ID) + "/prev_turn"} hx-target="body" class="text-4xl text-white ml-4"><i class="fa-solid fa-caret-left"></i></button>
	           	<button @click="isMonstersOpen = true" class="text-3xl text-white ml-4"><i class="fa-solid fa-plus"></i></button>
	            <button hx-post={"/encounters/" + strconv.Itoa(encounter.ID) + "/next_turn"} hx-target="body" class="text-4xl text-white mr-4"><i class="fa-solid fa-caret-right"></i></button>
	        </section>
     </div>
    }
}

func getColorClass(combatant models.Combatant) string {
    switch combatant.GetType() {
    case "player":
        return "bg-green-700"
    case "monster":
        return "bg-red-900"
    default:
        return "bg-gray-500"
    }
}

func setDefeated(combatant models.Combatant) string {
    if combatant.GetHp() <= 0 {
        return "opacity-50"
    }

    return ""
}

func isActive(index int, turn int) string {
    if index == turn {
        return "border-yellow-500"
    } else {
        return "border-gray-100"
    }
}

func plusMinus(value int) string {
    if value <= 0 {
        return strconv.Itoa(value)
    } else {
        return "+" + strconv.Itoa(value)
    }
}
